function W = Multi_DCCA_2( data,A,dim )
%data cell array that contain vieews and A is array that contain similarity betwwen view 
%W that cell array contain w for each view according to order of data





r = 1e-8;

numview=size(data,2);

maxsize=0;
for j=1:numview
    
    if size(data{1,j},1)>maxsize
                maxsize=size(data{1,j},1);
    end
end


for i=1:numview
   
    d=data{1,i}*data{1,i}'+eye(size(data{1,i},1))*r;
    Cxx{1,i}(:,:) = d(:,:);
    
    clear d;
    
    [U,D,U] = svd(Cxx{1,i});
    inv2Cxx1 = U * diag(1./sqrt(diag(D))) * U';
    
    clear U;
    clear D;
    
    inv2Cxx{1,i}=zeros(maxsize,maxsize);
    inv2Cxx{1,i}(1:size(inv2Cxx1,1),1:size(inv2Cxx1,2)) = inv2Cxx1(:,:);
    
    clear inv2Cxx1;
    
  % gh=inv2Cxx{1,i};
   % save('E:\cxx.txt','gh','-ASCII');
   
end

for i=1:numview
     c=1;
    for j=1:numview
        if i~=j
      
          C{1,c} = data{1,i}*A{i,j}*data{1,j}';
          c=c+1;

        
        end
        
    end
   
        Cxy{1,i}=zeros(maxsize,maxsize);
        
        for j=1:numview-1
            
             C1{1,j}=zeros(maxsize,maxsize);
             C1{1,j}(1:size(C{1,j},1),1:size(C{1,j},2))=C{1,j}(:,:);
                    
             Cxy{1,i}=C1{1,j}+Cxy{1,i};
             
        end
        clear C1;
        clear C;
        
    
        
    
end
maxsize;
Cxx;
Cxy;

clear data;
clear A;



%dcxy=Cxy{1,1};
 %save('E:\cxy.txt','dcxy','-ASCII');
% --- Calcualte Wx and r ---
for i=1:numview
    
    flag=0;
    for j=1:numview
        
        if i~=j
           
            if flag==0   
                
                f=inv2Cxx{1,i} *Cxy{1,i}* inv2Cxx{1,j} * Cxy{1,j} ;
                flag=1;                
          
            else
                f=f+inv2Cxx{1,i} *Cxy{1,i}* inv2Cxx{1,j} * Cxy{1,j} ;
            end
        end
    end
[Wx,r] = eig(f); % Basis in X

clear f;

r = sqrt(real(r));      % Canonical correlations

% --- Sort correlations ---bayad bashe ke khoroji bar hasb ahamiyat dim ha
% morat shode bashe

V = fliplr(Wx);		% reverse order of eigenvectors
r = flipud(diag(r));	% extract eigenvalues anr reverse their orrer
[r,I]= sort((real(r)));	% sort reversed eigenvalues in ascending order
r = flipud(r);		% restore sorted eigenvalues into descending order
for j = 1:length(I)
  Wx(:,j) = V(:,I(j));  % sort reversed eigenvectors in ascending order
end
W{1,i} = fliplr(Wx);	% restore sorted eigenvectors into descending order

end
%{
% --- Calcualte Wy  ---


[Wy,r] = eig(inv2Cxx{1,2} *Cxy{1,2}* inv2Cxx{1,1} * Cxy{1,1}); % Basis in y

r = sqrt(real(r));      % Canonical correlations

% --- Sort correlations ---

V = fliplr(Wy);		% reverse order of eigenvectors
r = flipud(diag(r));	% extract eigenvalues anr reverse their orrer
[r,I]= sort((real(r)));	% sort reversed eigenvalues in ascending order
r = flipud(r);		% restore sorted eigenvalues into descending order
for j = 1:length(I)
  Wy(:,j) = V(:,I(j));  % sort reversed eigenvectors in ascending order
end
Wy = fliplr(Wy);	
%}

clear Cxy;
clear inv2Cxx;
clear Wx;
clear V;
clear I;
clear r;

dim;
if dim>maxsize
    dim=maxsize;
end

disp('Multi_DCCA dimension reduction:');
dim



for i=1:numview
    
size(W{1,i});

W{1,i} = W{1,i}(:,1:dim);

size(W{1,i});


end



end

